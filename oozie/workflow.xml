<workflow-app name="ooziebenchmark" xmlns="uri:oozie:workflow:0.4">
	<start to="hivePrep"/>
	<!-- HIVE SCRIPTS -->
	<!-- Prepare 'corpora' table -->
	<action name="hivePrep">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL/TableLoad.hql</script>
			<param>table=${input}</param>
		</hive>
		<ok to="mapredCount"/>
		<error to="kill"/>
	</action>
	<!-- Hive -> WordCount -->
	<action name="hiveCount">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL/AppCount.hql</script>
			<param>output=${output}</param>
		</hive>
		<ok to="hiveCooc"/>
		<error to="kill"/>
	</action>
	<!-- Hive -> Cooccurrence -->
	<action name="hiveCooc">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL/AppCountCooc.hql</script>
			<param>output=${output}</param>
		</hive>
		<ok to="hiveCountLeft"/>
		<error to="kill"/>
	</action>
	<!-- Hive -> CountLeft -->
	<action name="hiveCountLeft">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL/AppCountLeft.hql</script>
			<param>output=${output}</param>
		</hive>
		<ok to="hiveCountRight"/>
		<error to="kill"/>
	</action>
	<!-- Hive -> CountRight -->
	<action name="hiveCountRight">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL/AppCountRight.hql</script>
			<param>output=${output}</param>
		</hive>
		<ok to="hiveUDFCount"/>
		<error to="kill"/>
	</action>
	<!-- HIVE_UDFs -->
	<!-- HiveUDF -> Count -->
	<action name="hiveUDFCount">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL_UDF/AppCount.hql</script>
			<param>output=${output}</param>
			<param>lib=${lib}</param>
		</hive>
		<ok to="hiveUDFCountCooc"/>
		<error to="kill"/>
	</action>
	<!-- HiveUDF -> CountCooc -->
	<action name="hiveUDFCountCooc">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL_UDF/AppCountCooc.hql</script>
			<param>output=${output}</param>
			<param>lib=${lib}</param>
		</hive>
		<ok to="hiveUDFLeft"/>
		<error to="kill"/>
	</action>
	<!-- HiveUDF -> CountLeft -->
	<action name="hiveUDFLeft">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL_UDF/AppCountLeft.hql</script>
			<param>output=${output}</param>
			<param>lib=${lib}</param>
		</hive>
		<ok to="hiveUDFRight"/>
		<error to="kill"/>
	</action>
	<!-- HiveUDF -> CountRight -->
	<action name="hiveUDFRight">
		<hive xmlns="uri:oozie:hive-action:0.2">
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<job-xml>hive-site.xml</job-xml>
			<script>HiveQL_UDF/AppCountRight.hql</script>
			<param>output=${output}</param>
			<param>lib=${lib}</param>
		</hive>
		<ok to="pigCount"/>
		<error to="kill"/>
	</action>
	<!-- PIG SCRIPTS -->
	<!-- Pig -> Count -->
	<action name="pigCount">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigCount"/>
			</prepare>
			<script>PigLatin/AppCount.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
		</pig>
		<ok to="pigCountCooc"/>
		<error to="kill"/>
	</action>
	<!-- Pig -> CountCooc -->
	<action name="pigCountCooc">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigCooc"/>
			</prepare>
			<script>PigLatin/AppCountCooc.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
		</pig>
		<ok to="pigCountLeft"/>
		<error to="kill"/>
	</action>
	<!-- Pig -> CountLeft -->
	<action name="pigCountLeft">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigLeft"/>
			</prepare>
			<script>PigLatin/AppCountLeft.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
		</pig>
		<ok to="pigCountRight"/>
		<error to="kill"/>
	</action>
	<!-- Pig -> Count -->
	<action name="pigCountRight">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigRight"/>
			</prepare>
			<script>PigLatin/AppCountRight.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
		</pig>
		<ok to="pigUDFCountLeft"/>
		<error to="kill"/>
	</action>
	<!-- PIG_UDFs -->
	<!-- PigUDF -> CountLeft -->
	<action name="pigUDFCountLeft">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigUDFLeft"/>
			</prepare>
			<script>PigLatin_UDF/AppCountLeft.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
			<argument>-param</argument>
			<argument>lib=${lib}</argument>
		</pig>
		<ok to="pigUDFCountRight"/>
		<error to="kill"/>
	</action>
	<!-- PigUDF -> CountRight -->
	<action name="pigUDFCountRight">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigUDFRight"/>
			</prepare>
			<script>PigLatin_UDF/AppCountRight.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
			<argument>-param</argument>
			<argument>lib=${lib}</argument>
		</pig>
		<ok to="pigUDFCountCooc"/>
		<error to="kill"/>
	</action>
	<!-- PigUDF -> CountCooc -->
	<action name="pigUDFCountCooc">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigUDFCooc"/>
			</prepare>
			<script>PigLatin_UDF/AppCountCooc.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
			<argument>-param</argument>
			<argument>lib=${lib}</argument>
		</pig>
		<ok to="pigUDFCount"/>
		<error to="kill"/>
	</action>
	<!-- PigUDF -> Count -->
	<action name="pigUDFCount">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigUDFCount"/>
			</prepare>
			<script>PigLatin_UDF/AppCount.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
			<argument>-param</argument>
			<argument>lib=${lib}</argument>
		</pig>
		<ok to="pigUDFLoadCooc"/>
		<error to="kill"/>
	</action>
	<!-- PigUDF -> LoadCooc -->
	<action name="pigUDFLoadCooc">
		<pig>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/pigUDFLoadCooc"/>
			</prepare>
			<script>PigLatin_UDF/AppLoadCooc.pig</script>
			<argument>-param</argument>
			<argument>input=${input}</argument>
			<argument>-param</argument>
			<argument>output=${output}</argument>
			<argument>-param</argument>
			<argument>lib=${lib}</argument>
		</pig>
		<ok to="mapredCount"/>
		<error to="kill"/>
	</action>
	<!-- MapReduce executions -->
	<!-- MapReduce -> Count -->
	<action name="mapredCount">
		<map-reduce>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/mapredCount" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapreduce.map.class</name>
					<value>edu.appstate.kepplemr.counts.WordCount$CountsMapper</value>
				</property>
				<property>
					<name>mapreduce.reduce.class</name>
					<value>edu.appstate.kepplemr.counts.WordCount$CountsReducer</value>
				</property>
				<property>
					<name>mapred.output.key.class</name>
					<value>org.apache.hadoop.io.Text</value>
				</property>
				<property>
					<name>mapred.output.value.class</name>
					<value>org.apache.hadoop.io.IntWritable</value>
				</property>
				<property>
					<name>wordToSearch</name>
					<value>appalachian</value>
				</property>
				<property>
					<name>mapreduce.job.queue.name</name>
					<value>${queueName}</value>
				</property>
				<property>
					<name>mapred.input.dir</name>
					<value>${input}</value>
				</property>
				<property>
					<name>mapred.output.dir</name>
					<value>${output}/mapredCount</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="mapredCooc"/>
		<error to="kill"/>
	</action>
	<!-- MapReduce -> Cooc -->
	<action name="mapredCooc">
		<map-reduce>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/mapredCooc" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapreduce.map.class</name>
					<value>edu.appstate.kepplemr.counts.CoocCount$CountsMapper</value>
				</property>
				<property>
					<name>mapreduce.reduce.class</name>
					<value>edu.appstate.kepplemr.counts.CoocCount$CountsReducer</value>
				</property>
				<property>
					<name>mapred.output.key.class</name>
					<value>org.apache.hadoop.io.Text</value>
				</property>
				<property>
					<name>mapred.output.value.class</name>
					<value>org.apache.hadoop.io.IntWritable</value>
				</property>
				<property>
					<name>wordToSearch</name>
					<value>appalachian</value>
				</property>
				<property>
					<name>mapreduce.job.queue.name</name>
					<value>${queueName}</value>
				</property>
				<property>
					<name>mapred.input.dir</name>
					<value>${input}</value>
				</property>
				<property>
					<name>mapred.output.dir</name>
					<value>${output}/mapredCooc</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="mapredLeft"/>
		<error to="kill"/>
	</action>
	<!-- MapReduce -> CountLeft -->
	<action name="mapredLeft">
		<map-reduce>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/mapredLeft" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapreduce.map.class</name>
					<value>edu.appstate.kepplemr.counts.LeftCount$CountsMapper</value>
				</property>
				<property>
					<name>mapreduce.reduce.class</name>
					<value>edu.appstate.kepplemr.counts.LeftCount$CountsReducer</value>
				</property>
				<property>
					<name>mapred.output.key.class</name>
					<value>org.apache.hadoop.io.Text</value>
				</property>
				<property>
					<name>mapred.output.value.class</name>
					<value>org.apache.hadoop.io.IntWritable</value>
				</property>
				<property>
					<name>wordToSearch</name>
					<value>appalachian</value>
				</property>
				<property>
					<name>mapreduce.job.queue.name</name>
					<value>${queueName}</value>
				</property>
				<property>
					<name>mapred.input.dir</name>
					<value>${input}</value>
				</property>
				<property>
					<name>mapred.output.dir</name>
					<value>${output}/mapredLeft</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="mapredRight"/>
		<error to="kill"/>
	</action>
	<!-- MapReduce -> CountRight -->
	<action name="mapredRight">
		<map-reduce>
			<job-tracker>${jobTracker}</job-tracker>
			<name-node>${nameNode}</name-node>
			<prepare>
				<delete path="${nameNode}${output}/mapredRight" />
			</prepare>
			<configuration>
				<property>
					<name>mapred.reducer.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapred.mapper.new-api</name>
					<value>true</value>
				</property>
				<property>
					<name>mapreduce.map.class</name>
					<value>edu.appstate.kepplemr.counts.RightCount$CountsMapper</value>
				</property>
				<property>
					<name>mapreduce.reduce.class</name>
					<value>edu.appstate.kepplemr.counts.RightCount$CountsReducer</value>
				</property>
				<property>
					<name>mapred.output.key.class</name>
					<value>org.apache.hadoop.io.Text</value>
				</property>
				<property>
					<name>mapred.output.value.class</name>
					<value>org.apache.hadoop.io.IntWritable</value>
				</property>
				<property>
					<name>wordToSearch</name>
					<value>appalachian</value>
				</property>
				<property>
					<name>mapreduce.job.queue.name</name>
					<value>${queueName}</value>
				</property>
				<property>
					<name>mapred.input.dir</name>
					<value>${input}</value>
				</property>
				<property>
					<name>mapred.output.dir</name>
					<value>${output}/mapredRight</value>
				</property>
			</configuration>
		</map-reduce>
		<ok to="end"/>
		<error to="kill"/>
	</action>
	<kill name="kill">
		<message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
	</kill>
	<end name="end"/>
</workflow-app>